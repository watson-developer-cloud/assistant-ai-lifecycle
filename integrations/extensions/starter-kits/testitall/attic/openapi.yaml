openapi: 3.0.3
info:
  title: Mock Integration- Localhost
  version: 1.0.0
  contact: {}
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - url: https://{ngrok_uuid}.ngrok.io
    variables:
      ngrok_uuid:
        default: 3fb6-2a0d-6fc2-4380-3c00-3111-5ae5-c50f-224
        description: uuid provided by ngrok
  - url: http://{host}:4000
    variables:
      host:
        default: localhost
        description: testing our support for server variables
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
security: 
  - BasicAuth: []
  - BearerAuth: []
  - ApiKeyAuth: []
paths:
  /delay:
    post:
      tags:
        - API
      summary: Timeout
      description: if sleep_time is above 30, you will receive a 408
      operationId: delay
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sleep_time:
                  type: string
                  example: '25'
            example:
              sleep_time: '25'
      responses:
        '200':
          description: ''
        '408':
          description: 'Timeout, in case sleep time is above 30'
  /test:
    get:
      tags:
        - API
      summary: TEST GET
      description: TEST GET
      operationId: testGet
      responses:
        '200':
          description: ''
    put:
      tags:
        - API
      summary: TEST PUT
      description: TEST PUT
      operationId: testPut
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sleep_time:
                  type: string
                  example: '25'
            example:
              sleep_time: '25'
      responses:
        '200':
          description: ''
    post:
      tags:
        - API
      summary: TEST POST
      description: TEST POST
      operationId: testPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sleep_time:
                  type: string
                  example: '25'
            example:
              sleep_time: '25'
      responses:
        '200':
          description: ''
    delete:
      tags:
        - API
      summary: TEST DELETE
      description: TEST DELETE
      operationId: testDelete
      responses:
        '200':
          description: ''
  /test/content:
    post:
      tags:
        - API
      summary: TEST Content Aware 
      description: TEST Content Aware - Json
      operationId: testContentAwareJson
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sleep_time:
                  type: string
                  example: '25'
            example:
              sleep_time: '25'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
            text/plain:
              schema:
                type: string
  /test/arrays:
    post:
      tags:
        - API
      summary: TEST Arrays
      description: TEST Arrays
      operationId: testArrays
      responses:
        '200':
          description: 'this is the only response'
          content:
            application/json:
              schema:
                type: array
                properties:
                  message:
                    type: string
  /test/error:
    post:
      tags:
        - API
      summary: TEST Error
      description: TEST Error
      operationId: testError
      responses:
        '400':
          description: 'this is the only response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /test/params/{path_param}:
    post:
      tags:
        - API
      summary: TEST Params
      description: test we handle params  path, query, header
      operationId: testParams
      parameters:
        - in: query
          name: query_param   # Note the name is the same as in the path
          required: false
          schema:
            type: string
        - in: path
          name: path_param   # Note the name is the same as in the path
          required: true
          schema:
            type: string
        - in: header
          name: header_param
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'echoes back the params values'
  /security/{method}:
    post:
      tags:
        - API
      summary: TEST Security
      description: test we handle authentication for  basic, bearer, api-key
      operationId: testSecurity
      parameters:
        - in: path
          name: method   # Note the name is the same as in the path
          required: true
          schema:
            type: string
       
      responses:
        '200':
          description: 'echoes back the params values'
tags:
  - name: API