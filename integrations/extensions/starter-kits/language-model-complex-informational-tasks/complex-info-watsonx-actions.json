{
  "name": "watsonx complex tasks-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2023-08-14T16:49:24.410Z",
  "updated": "2023-08-15T22:15:33.082Z",
  "language": "en",
  "skill_id": "d6a375e3-6ad2-4d6c-90d6-41525873938a",
  "workspace": {
    "actions": [
      {
        "steps": [
          {
            "step": "step_888",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please select the TV package you would like to include in the plan."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "options": [
                    {
                      "label": "Bronze",
                      "value": {
                        "input": {
                          "text": "Bronze"
                        }
                      }
                    },
                    {
                      "label": "Silver",
                      "value": {
                        "input": {
                          "text": "Silver"
                        }
                      }
                    },
                    {
                      "label": "Gold",
                      "value": {
                        "input": {
                          "text": "Gold"
                        }
                      }
                    },
                    {
                      "label": "No TV",
                      "value": {
                        "input": {
                          "text": "No TV"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text": "I didn't catch that. Select a valid option:"
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_2561",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_888",
            "next_step": "step_784"
          },
          {
            "step": "step_784",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please select the internet package that will meet your needs."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "options": [
                    {
                      "label": "100 Mbps",
                      "value": {
                        "input": {
                          "text": "100 Mbps"
                        }
                      }
                    },
                    {
                      "label": "500 Mbps",
                      "value": {
                        "input": {
                          "text": "500 Mbps"
                        }
                      }
                    },
                    {
                      "label": "1 Gbps",
                      "value": {
                        "input": {
                          "text": "1 Gbps"
                        }
                      }
                    },
                    {
                      "label": "No Internet",
                      "value": {
                        "input": {
                          "text": "No Internet"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text": "I didn't catch that. Select a valid option:"
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_18967",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_784",
            "next_step": "step_489"
          },
          {
            "step": "step_489",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Do you want to update your account to this new plan?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text": "I'm sorry, I did not catch that, please restate your response."
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_489",
            "next_step": "step_939"
          },
          {
            "step": "step_939",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Updating your account to include the "
                          },
                          {
                            "variable": "step_888"
                          },
                          {
                            "scalar": " TV plan. You also requested $"
                          },
                          {
                            "variable": "step_784"
                          },
                          {
                            "scalar": " bundle."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_939",
            "condition": {
              "eq": [
                {
                  "variable": "step_489"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_409"
          },
          {
            "step": "step_409",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Your plan will be updated within the next 30 mins. Your confirmation number is 3174. Thanks!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_409",
            "next_step": "step_294"
          },
          {
            "step": "step_294",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Ok, is there anything else I can help you with?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_294",
            "condition": {
              "eq": [
                {
                  "variable": "step_489"
                },
                {
                  "scalar": "no"
                }
              ]
            }
          }
        ],
        "title": "Purchase a Plan",
        "action": "action_29608",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_29608_intent_22594"
        },
        "variables": [
          {
            "title": "Ok, is there anything else I can help you with?",
            "variable": "step_294",
            "data_type": "any"
          },
          {
            "title": "Your plan will be updated within the next 30 mins. Your confirma",
            "variable": "step_409",
            "data_type": "any"
          },
          {
            "title": "Do you want to update your account to this new plan?",
            "variable": "step_489",
            "data_type": "yes_no"
          },
          {
            "title": "Please select the internet package that will meet your needs.",
            "variable": "step_784",
            "data_type": "any"
          },
          {
            "title": "Please select the TV package you would like to include in the pl",
            "variable": "step_888",
            "data_type": "any"
          },
          {
            "title": "Updating your account to include the {variable} TV plan. You als",
            "variable": "step_939",
            "data_type": "any"
          }
        ],
        "next_action": "action_41495-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_821",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Invoking watsonx with the following prompt: "
                          },
                          {
                            "skill_variable": "model_prompt"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_821",
            "condition": {
              "eq": [
                {
                  "skill_variable": "verbose"
                },
                {
                  "scalar": true
                }
              ]
            },
            "next_step": "step_949"
          },
          {
            "step": "step_949",
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_47477",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_949_result_1"
              }
            },
            "variable": "step_949",
            "next_step": "step_483"
          },
          {
            "step": "step_483",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm sorry, I encountered a connection error."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_483",
            "condition": {
              "not": {
                "exists": {
                  "skill_variable": "model_response"
                }
              }
            },
            "next_step": "step_758"
          },
          {
            "step": "step_758",
            "output": {
              "generic": []
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_758"
          }
        ],
        "title": "Generate Answer",
        "action": "action_41261-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_41261_intent_28294-2"
        },
        "variables": [
          {
            "variable": "step_313_result_1",
            "data_type": "any"
          },
          {
            "title": "I'm sorry, I encountered a connection error.",
            "variable": "step_483",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_758",
            "data_type": "any"
          },
          {
            "title": "Invoking watsonx with the following prompt: {variable}",
            "variable": "step_821",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_949",
            "data_type": "any"
          },
          {
            "variable": "step_949_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_429",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "(${tv_plan_prompt}).concat(\"\\n \").concat(input.text)"
                  },
                  "skill_variable": "model_prompt"
                },
                {
                  "value": {
                    "scalar": "TV Plan Questions"
                  },
                  "skill_variable": "last_action_accessed"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_41261-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_429_result_1"
              }
            },
            "variable": "step_429",
            "next_step": "step_217"
          },
          {
            "step": "step_217",
            "output": {
              "generic": []
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "policy": "dynamic"
              }
            },
            "variable": "step_217",
            "condition": {
              "contains": [
                {
                  "skill_variable": "model_response"
                },
                {
                  "scalar": "I don't know",
                  "options": {
                    "ignore_case": true
                  }
                }
              ]
            },
            "next_step": "step_881"
          },
          {
            "step": "step_881",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "model_response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_429"
                }
              ]
            },
            "variable": "step_881"
          }
        ],
        "title": "TV Plan Questions",
        "action": "action_41495",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_41495_intent_37690"
        },
        "variables": [
          {
            "title": "",
            "variable": "step_217",
            "data_type": "any"
          },
          {
            "variable": "step_217_result_1",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_429",
            "data_type": "any"
          },
          {
            "variable": "step_429_result_1",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "variable": "step_881",
            "data_type": "any"
          },
          {
            "variable": "step_881_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_29608",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_365",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "(${internet_plan_prompt}).concat(\"\\n \").concat(input.text)"
                  },
                  "skill_variable": "model_prompt"
                },
                {
                  "value": {
                    "scalar": "Internet Plan Questions"
                  },
                  "skill_variable": "last_action_accessed"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_41261-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_365_result_2"
              }
            },
            "variable": "step_365",
            "next_step": "step_802"
          },
          {
            "step": "step_802",
            "output": {
              "generic": []
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "policy": "dynamic"
              }
            },
            "variable": "step_802",
            "condition": {
              "contains": [
                {
                  "skill_variable": "model_response"
                },
                {
                  "scalar": "I don't know",
                  "options": {
                    "ignore_case": true
                  }
                }
              ]
            },
            "next_step": "step_744"
          },
          {
            "step": "step_744",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "model_response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_365"
                }
              ]
            },
            "variable": "step_744"
          }
        ],
        "title": "Internet Plan Questions",
        "action": "action_41495-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_41495_intent_37690-2"
        },
        "variables": [
          {
            "title": "",
            "variable": "step_365",
            "data_type": "any"
          },
          {
            "variable": "step_365_result_2",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "variable": "step_744",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_802",
            "data_type": "any"
          },
          {
            "variable": "step_802_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_41261-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_716",
            "output": {
              "generic": []
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v1-beta/generation/text",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "cc50493e455de183d661b95360196ddb468a02051add6dcaf4a6479b34900be5",
                  "catalog_item_id": "67ad4d93-b267-4a1c-bd57-5a028f5e27c7"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "model_prompt"
                      },
                      "parameter": "input"
                    },
                    {
                      "value": {
                        "skill_variable": "model_id"
                      },
                      "parameter": "model_id"
                    },
                    {
                      "value": {
                        "skill_variable": "watsonx_project_id"
                      },
                      "parameter": "project_id"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_temperature"
                      },
                      "parameter": "parameters.temperature"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_max_new_tokens"
                      },
                      "parameter": "parameters.max_new_tokens"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_min_new_tokens"
                      },
                      "parameter": "parameters.min_new_tokens"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_stop_sequences"
                      },
                      "parameter": "parameters.stop_sequences"
                    },
                    {
                      "value": {
                        "skill_variable": "model_parameters_repetition_penalty"
                      },
                      "parameter": "parameters.repetition_penalty"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "skill_variable": "watsonx_api_version"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_716_result_1"
              }
            },
            "variable": "step_716",
            "next_step": "step_252"
          },
          {
            "step": "step_252",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_716_result_1.body.results}[0].generated_text"
                  },
                  "skill_variable": "model_response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_252",
            "condition": {
              "eq": [
                {
                  "variable": "step_716_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            }
          }
        ],
        "title": "Invoke watsonx",
        "action": "action_47477",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_47477_intent_7559"
        },
        "variables": [
          {
            "title": "No response",
            "variable": "step_252",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_716",
            "data_type": "any"
          },
          {
            "variable": "step_716_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_41495",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_713",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "\"I don't know and it is not in my knowledgebase\""
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_713"
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "\"I don't know and it is not in my knowledgebase\"",
            "variable": "step_713",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Unfortunately, I don't know since this is not a relevant question. please feel free to ask a different question."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "Unfortunately, I don't know since this is not a relevant questio",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_47477",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_29608_intent_22594",
        "examples": [
          {
            "text": "change my plan"
          },
          {
            "text": "Give me the plan"
          },
          {
            "text": "Give me the silver plan"
          },
          {
            "text": "I'll have the plan"
          },
          {
            "text": "I'll take the bronze plan"
          },
          {
            "text": "I'll take the gold plan"
          },
          {
            "text": "I'll take the silver plan"
          },
          {
            "text": "I want to change my plan"
          },
          {
            "text": "I want to purchase that internet plan."
          },
          {
            "text": "I want to update my plan to include"
          },
          {
            "text": "I want to upgrade my plan"
          },
          {
            "text": "modify plan"
          },
          {
            "text": "modify tv plan"
          },
          {
            "text": "please sign me up for the gold plan and cancel the current plan I have."
          },
          {
            "text": "Purchase TV plan"
          },
          {
            "text": "Sign me up for the plan"
          },
          {
            "text": "Sing me up for the silver plan"
          },
          {
            "text": "update my plan"
          },
          {
            "text": "Upgrade plan"
          },
          {
            "text": "upgrade tv plan"
          }
        ]
      },
      {
        "intent": "action_41261_intent_28294-2",
        "examples": []
      },
      {
        "intent": "action_41495_intent_37690",
        "examples": [
          {
            "text": "Are there contracts?"
          },
          {
            "text": "Does the gold plan include"
          },
          {
            "text": "Does the plan include"
          },
          {
            "text": "Does the silver plan include"
          },
          {
            "text": "I need a plan"
          },
          {
            "text": "I only need these channels on my TV Plan"
          },
          {
            "text": "I want a TV plan that"
          },
          {
            "text": "I would like a plan"
          },
          {
            "text": "TV Plan"
          },
          {
            "text": "TV Plan determination"
          },
          {
            "text": "What are the terms of the contract?"
          },
          {
            "text": "What's the cheapest plan"
          },
          {
            "text": "Which plans have"
          },
          {
            "text": "Which TV plan has the most channels"
          },
          {
            "text": "Which TV plan has these channels"
          },
          {
            "text": "Which TV plan is the cheapest"
          },
          {
            "text": "Which TV plan would be best"
          }
        ]
      },
      {
        "intent": "action_41495_intent_37690-2",
        "examples": [
          {
            "text": "I need an internet plan that can support 4 simultaneous tv streams."
          },
          {
            "text": "Internet Plan Questions"
          },
          {
            "text": "What internet plans to you offer"
          },
          {
            "text": "What internet plan works well for streaming"
          },
          {
            "text": "What's the cheapest internet plan?"
          },
          {
            "text": "Which internet plan is best for me"
          }
        ]
      },
      {
        "intent": "action_47477_intent_7559",
        "examples": [
          {
            "text": "Invoke watsonx"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "entity_18967",
        "values": [
          {
            "type": "synonyms",
            "value": "100 Mbps",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "1 Gbps",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "500 Mbps",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "No Internet",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_2561",
        "values": [
          {
            "type": "synonyms",
            "value": "Bronze",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Gold",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "No TV",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Silver",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2021-11-27"
      }
    },
    "variables": [
      {
        "title": "internet_plan_prompt",
        "variable": "internet_plan_prompt",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "expression": "\"You are an agent for a cable provider that helps customers determine which internet plan is best for them.  Limit your response to 30 words and only discuss which plans are best for that customer unless prompted otherwise. If you don't find anything relevant, only & only say 'I don't know' and nothing additional. The three plans are 1) The 100 Mbps plan which cost $30; 2) The 500 Mbps which cost $40; 3) The 1 Gbps plan which cost $50\""
        }
      },
      {
        "title": "last_action_accessed",
        "variable": "last_action_accessed",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "\"\""
        }
      },
      {
        "title": "model_id",
        "variable": "model_id",
        "data_type": "string",
        "description": "The ID of the model to be used for this request. Please refer to the list of models at https://bam.res.ibm.com/docs/models",
        "initial_value": {
          "scalar": "google/flan-ul2"
        }
      },
      {
        "title": "model_parameters_max_new_tokens",
        "variable": "model_parameters_max_new_tokens",
        "data_type": "number",
        "description": "The maximum number of new tokens to be generated.",
        "initial_value": {
          "scalar": 300
        }
      },
      {
        "title": "model_parameters_min_new_tokens",
        "variable": "model_parameters_min_new_tokens",
        "data_type": "number",
        "description": "",
        "initial_value": {
          "scalar": 1
        }
      },
      {
        "title": "model_parameters_repetition_penalty",
        "variable": "model_parameters_repetition_penalty",
        "data_type": "number",
        "description": "",
        "initial_value": {
          "scalar": 1.1
        }
      },
      {
        "title": "model_parameters_stop_sequences",
        "variable": "model_parameters_stop_sequences",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "expression": "[\"\\n\\n\"]"
        }
      },
      {
        "title": "model_parameters_temperature",
        "variable": "model_parameters_temperature",
        "data_type": "number",
        "description": "The value used to module the next token probabilities. The range is 0 to 1.00, a value set to 0 would make it mostly deterministic.",
        "initial_value": {
          "scalar": 0.1
        }
      },
      {
        "title": "model_prompt",
        "variable": "model_prompt",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "model_response",
        "variable": "model_response",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "tv_plan_prompt",
        "variable": "tv_plan_prompt",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "scalar": "You are an agent for a cable provider that helps customers determine which TV plan is best for them. The plan to recommend should include all of the channels they request. Limit your response to 30 words and only discuss which plans are best for that customer unless prompted otherwise. If you don't find anything relevant, only & only say 'I don't know' and nothing additional. Here are the plans: \n Plan ID: Bronze \n Channels: A&E HD East, AMC, Bravo HD, CNBC HD, CNN HD, Comedy Central, Cooking Channel, E! Entertainment Television, Esquire HD, Food Network, Fox Business HD, Fox News Channel, Fuse, FX HD, Hallmark Channel HD, HLN HD, HGTV HD, HSN HD, Lifetime HD, MSNBC HD, NewsNation SD, Nickelodeon, Olympic Channel, Paramount Network HD, QVC, SYFY HD, Golf Channel HD, Travel Channel, Weather Channel HD, TLC HD, truTV HD, USA Network HD, WEtv HD \n Cost: $60 Plan ID: Silver Channels: A&E HD East, AMC, AMC Pacific, Animal Planet Pacific, ASPiRE, BBC America, BBC News North America, Bloomberg Business Television, Bravo, Bravo HD, CNN, Cartoon Network, CMT Pacific, CNBC, Comedy Central, Cooking Channel, C-SPAN2, C-SPAN3, Discovery Channel, E! Entertainment Television, E! Entertainment Television Pacific, E! Entertainment Television HD, Esquire HD, Food Network, Food Network Pacific, Food Network HD, Fox Business, Fox News Channel, Freeform, Fuse, FX, FX HD, Game Show Network, Game Show Network HD, Great American Family, Hallmark Channel, Hallmark Channel Pacific, Hallmark Channel HD, HLN HD, HGTV HD, HSN, HSN HD, Investigation Discovery, Lifetime, Lifetime HD, LMN, Military History Channel, MSNBC, MSNBC HD, MTV Classic Pacific, National Geographic USA, NewsNation SD, Nickelodeon, Nicktoons, Olympic Channel, Outdoor Channel, Oxygen True Crime, Paramount Network HD, QVC, SYFY HD, Golf Channel HD, Travel Channel, Weather Channel HD, TLC HD, truTV HD, TV ONE, Universal Kids, USA Network HD, WEtv, WEtv HD, Xfinity Help & Services \n Cost: $80 \n Plan ID: Gold \n Channels: A&E HD East, AMC, AMC Pacific, American Heroes Channel, Animal Planet Pacific, ASPiRE, BBC America, BBC News North America, BETHer, BET Jams, BET Soul, Bloomberg Business Television, Bravo, Bravo HD, CNN, Cartoon Network, CMT Pacific, CMT Music, CNBC, Comedy Central, Cooking Channel, Crime+Investigation, C-SPAN2, C-SPAN3, Destination America, Discovery Channel, Discovery Family Channel, Disney XD, E! Entertainment Television, E! Entertainment Television Pacific, E! Entertainment Television HD, ESPNEWS, Esquire HD, Flix, Food Network, Food Network Pacific, Food Network HD, Fox Business, Fox News Channel, Freeform, Fuse, FX, FX HD, FYI, Game Show Network, Game Show Network HD, Great American Family, Hallmark Channel, Hallmark Channel Pacific, Hallmark Channel HD, HLN HD, HGTV HD, HSN, HSN HD, Investigation Discovery, Lifetime, Lifetime HD, LMN, Logo, Military History Channel, MSNBC, MSNBC HD, MTV Classic, MTV Classic Pacific, MTV2: Music Television, National Geographic USA, NewsNation SD, NFL RedZone, Nick Jr., Nick Music, NickToo East, Nickelodeon, Nicktoons, Olympic Channel, Outdoor Channel, Outdoor Channel HD, Ovation, Oxygen True Crime, Paramount Network, Paramount Network HD, QVC, SYFY HD, Science, Starz Encore Pacific, Starz Encore Classic, Starz Encore Suspense, SundanceTV, SYFY HD, TeenNick, Tennis Channel, Golf Channel HD, Travel Channel, Weather Channel HD, TLC, TLC HD, Tr3s: MTV, Música y Más, truTV HD, TV ONE, Universal Kids, USA Network HD, Vice, WEtv, WEtv HD, Xfinity Help & Services \n Cost: $100 \n When more than two plans meet the query, always suggest the more expensive plan first. Lastly, there are no contracts with any of these plans."
        }
      },
      {
        "title": "verbose",
        "variable": "verbose",
        "data_type": "boolean",
        "description": "Set to True for debugging output",
        "initial_value": {
          "scalar": false
        }
      },
      {
        "title": "watsonx_api_version",
        "variable": "watsonx_api_version",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "scalar": "2023-05-29"
        }
      },
      {
        "title": "watsonx_project_id",
        "variable": "watsonx_project_id",
        "data_type": "any",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "launch_mode": {},
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": false,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true
  },
  "description": "created for assistant 4fec3f06-cc09-4398-82af-6ab377d02783",
  "assistant_id": "ac63df7c-b413-4bd6-816f-54ecbc68a1f5",
  "workspace_id": "d6a375e3-6ad2-4d6c-90d6-41525873938a",
  "dialog_settings": {},
  "next_snapshot_version": "1"
}
