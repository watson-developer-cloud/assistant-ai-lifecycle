{
  "name": "Transcript Summary Using LLMs-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2023-04-17T20:35:33.560Z",
  "updated": "2023-05-06T13:37:02.814Z",
  "language": "en",
  "skill_id": "cfe417d3-1e64-419f-bd8d-1156ff56c64f",
  "workspace": {
    "actions": [
      {
        "steps": [
          {
            "step": "step_770",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "\"Provide a concise summary in plain English of the following conversation between a chatbot and a user: \" + ${session_history}"
                  },
                  "skill_variable": "model_prompt"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_25675-2",
                "parameters": null,
                "result_variable": "step_770_result_2"
              }
            },
            "variable": "step_770",
            "condition": {
              "expression": "${session_history}.size() > 0"
            },
            "next_step": "step_479"
          },
          {
            "step": "step_479",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sorry I could not help!  I will get a human agent.  Here is a summary of our discussion so far (which will be sent to the agent for awareness):\n\n<br />\n\n\n\n\n\n**"
                          },
                          {
                            "skill_variable": "model_response"
                          },
                          {
                            "scalar": "**"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you"
                },
                "message_to_human_agent": "${model_response}"
              }
            },
            "variable": "step_479",
            "condition": {
              "exists": {
                "skill_variable": "model_response"
              }
            },
            "next_step": "step_206"
          },
          {
            "step": "step_206",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sorry I could not help!  I will get a human agent."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {
                    "service_desk": {
                      "department": "x"
                    }
                  }
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": "${model_response}"
              }
            },
            "variable": "step_206",
            "condition": {
              "not": {
                "exists": {
                  "skill_variable": "model_response"
                }
              }
            }
          }
        ],
        "title": "Escalate to Agent",
        "action": "action_11673-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_11673_intent_33832-2"
        },
        "variables": [
          {
            "title": "Sorry I could not help! I will get a human agent.",
            "variable": "step_206",
            "data_type": "any"
          },
          {
            "title": "Sorry I could not help! I will get a human agent. Here is a summ",
            "variable": "step_479",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_770",
            "data_type": "any"
          },
          {
            "variable": "step_770_result_2",
            "data_type": "any"
          }
        ],
        "next_action": "action_25675-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_126",
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/v1/completions",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "52abfcce168af45904bbec67aa72171f74fe00fccc025503d374dbe9d83f0898",
                  "catalog_item_id": "9a1c9546-cf5f-49e9-9f44-a6aa760dece7"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "scalar": "text-davinci-003"
                      },
                      "parameter": "model"
                    },
                    {
                      "value": {
                        "skill_variable": "model_prompt"
                      },
                      "parameter": "prompt"
                    },
                    {
                      "value": {
                        "scalar": 200
                      },
                      "parameter": "max_tokens"
                    }
                  ]
                },
                "result_variable": "step_126_result_1"
              }
            },
            "variable": "step_126",
            "next_step": "step_973"
          },
          {
            "step": "step_973",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_126_result_1}.body.choices[0].text"
                  },
                  "skill_variable": "model_response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_973",
            "condition": {
              "and": [
                {
                  "eq": [
                    {
                      "variable": "step_126_result_1",
                      "variable_path": "success"
                    },
                    {
                      "scalar": true
                    }
                  ]
                },
                {
                  "expression": "${step_126_result_1}.body.choices.size() > 0"
                }
              ]
            },
            "next_step": "step_416"
          },
          {
            "step": "step_416",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "null"
                  },
                  "skill_variable": "model_response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_416"
          }
        ],
        "title": "Invoke GPT Completion API",
        "action": "action_25675",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_25675_intent_42103"
        },
        "variables": [
          {
            "title": "No response",
            "variable": "step_126",
            "data_type": "any"
          },
          {
            "variable": "step_126_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_416",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_973",
            "data_type": "any"
          }
        ],
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_126",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "[{\"role\": \"user\", \"content\": \"${model_prompt}\"}]"
                  },
                  "skill_variable": "messages"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/v1/chat/completions",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "52abfcce168af45904bbec67aa72171f74fe00fccc025503d374dbe9d83f0898",
                  "catalog_item_id": "9a1c9546-cf5f-49e9-9f44-a6aa760dece7"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "scalar": "gpt-3.5-turbo"
                      },
                      "parameter": "model"
                    },
                    {
                      "value": {
                        "expression": "${messages}"
                      },
                      "parameter": "messages"
                    },
                    {
                      "value": {
                        "scalar": 200
                      },
                      "parameter": "max_tokens"
                    }
                  ]
                },
                "result_variable": "step_126_result_1"
              }
            },
            "variable": "step_126",
            "next_step": "step_973"
          },
          {
            "step": "step_973",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_126_result_1}.body.choices[0].message.content"
                  },
                  "skill_variable": "model_response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_973",
            "condition": {
              "and": [
                {
                  "eq": [
                    {
                      "variable": "step_126_result_1",
                      "variable_path": "success"
                    },
                    {
                      "scalar": true
                    }
                  ]
                },
                {
                  "expression": "${step_126_result_1}.body.choices.size() > 0"
                }
              ]
            },
            "next_step": "step_416"
          },
          {
            "step": "step_416",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "null"
                  },
                  "skill_variable": "model_response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_416"
          }
        ],
        "title": "Invoke GPT Chat Completion API",
        "action": "action_25675-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_25675_intent_42103-2"
        },
        "variables": [
          {
            "title": "",
            "variable": "step_126",
            "data_type": "any"
          },
          {
            "variable": "step_126_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_416",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_973",
            "data_type": "any"
          }
        ],
        "next_action": "action_25675",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_969",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "query_text"
                },
                {
                  "value": {
                    "scalar": "Why did the chicken cross the road?"
                  },
                  "skill_variable": "response"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_40873",
                "parameters": null,
                "result_variable": "step_969_result_1"
              }
            },
            "variable": "step_969",
            "next_step": "step_955"
          },
          {
            "step": "step_955",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_969"
                  },
                  "skill_variable": "query_text"
                },
                {
                  "value": {
                    "scalar": "To get to the other side!"
                  },
                  "skill_variable": "response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_40873",
                "parameters": null,
                "result_variable": "step_955_result_1"
              }
            },
            "variable": "step_955",
            "condition": {
              "contains": [
                {
                  "variable": "step_969"
                },
                {
                  "scalar": "why",
                  "options": {
                    "ignore_case": true
                  }
                }
              ]
            },
            "next_step": "step_908"
          },
          {
            "step": "step_908",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_969"
                  },
                  "skill_variable": "query_text"
                },
                {
                  "value": {
                    "scalar": "If you want to get the answer, you need to ask \"why\"!"
                  },
                  "skill_variable": "response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_40873",
                "parameters": null,
                "result_variable": "step_908_result_1"
              }
            },
            "variable": "step_908",
            "next_step": "step_715"
          },
          {
            "step": "step_715",
            "output": {
              "generic": []
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_969"
                },
                {
                  "variable": "step_955"
                }
              ]
            },
            "variable": "step_715"
          }
        ],
        "title": "Tell a joke",
        "action": "action_28342",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_28342_intent_39595"
        },
        "variables": [
          {
            "title": "",
            "variable": "step_715",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "variable": "step_908",
            "data_type": "any"
          },
          {
            "variable": "step_908_result_1",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "variable": "step_955",
            "data_type": "any"
          },
          {
            "variable": "step_955_result_1",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "variable": "step_969",
            "data_type": "any"
          },
          {
            "variable": "step_969_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_28342-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_969",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Why did the chicken cross the road?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_969",
            "next_step": "step_955"
          },
          {
            "step": "step_955",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "To get to the other side!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_955",
            "condition": {
              "contains": [
                {
                  "variable": "step_969"
                },
                {
                  "scalar": "why",
                  "options": {
                    "ignore_case": true
                  }
                }
              ]
            },
            "next_step": "step_908"
          },
          {
            "step": "step_908",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "If you want to get the answer, you need to ask \"why\"!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_969"
                },
                {
                  "variable": "step_955"
                }
              ]
            },
            "variable": "step_908"
          }
        ],
        "title": "Tell a joke without recording context",
        "action": "action_28342-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_28342_intent_39595-2"
        },
        "variables": [
          {
            "title": "If you want to get the answer, you need to ask \"why\"!",
            "variable": "step_908",
            "data_type": "any"
          },
          {
            "title": "To get to the other side!",
            "variable": "step_955",
            "data_type": "any"
          },
          {
            "title": "Why did the chicken cross the road?",
            "variable": "step_969",
            "data_type": "any"
          }
        ],
        "next_action": "action_11673-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_819",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${session_history}.add({\"user\":${query_text},\"chatbot\":${response}})"
                  },
                  "skill_variable": "update_succeeded"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_819"
          }
        ],
        "title": "Record context",
        "action": "action_40873",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_40873_intent_30238"
        },
        "variables": [
          {
            "title": "No response",
            "variable": "step_819",
            "data_type": "any"
          }
        ],
        "next_action": "action_28342",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_394",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "query_text"
                },
                {
                  "value": {
                    "scalar": "Sorry, I do not understand."
                  },
                  "skill_variable": "response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_40873",
                "parameters": null,
                "result_variable": "step_394_result_1"
              }
            },
            "variable": "step_394"
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "{variable}",
            "variable": "step_394",
            "data_type": "any"
          },
          {
            "variable": "step_394_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_855",
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_11673-2",
                "parameters": null,
                "result_variable": "step_855_result_1"
              }
            },
            "variable": "step_855"
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "No response",
            "variable": "step_855",
            "data_type": "any"
          },
          {
            "variable": "step_855_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_40873",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_11673_intent_33832-2",
        "examples": []
      },
      {
        "intent": "action_25675_intent_42103",
        "examples": []
      },
      {
        "intent": "action_25675_intent_42103-2",
        "examples": []
      },
      {
        "intent": "action_28342_intent_39595",
        "examples": [
          {
            "text": "Tell a joke"
          }
        ]
      },
      {
        "intent": "action_28342_intent_39595-2",
        "examples": []
      },
      {
        "intent": "action_40873_intent_30238",
        "examples": []
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "messages",
        "variable": "messages",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "model_prompt",
        "variable": "model_prompt",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "model_response",
        "variable": "model_response",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "query_text",
        "variable": "query_text",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "response",
        "variable": "response",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "session_history",
        "variable": "session_history",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "expression": "[]"
        }
      },
      {
        "title": "session_id",
        "variable": "session_id",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "session_summary",
        "variable": "session_summary",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "update_succeeded",
        "variable": "update_succeeded",
        "data_type": "boolean",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "intent_classification": {
        "training_backend_version": "v2"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false
  },
  "description": "created for assistant a66a897a-ee82-4e70-bbf9-4d54b1b20b94",
  "assistant_id": "a66a897a-ee82-4e70-bbf9-4d54b1b20b94",
  "workspace_id": "cfe417d3-1e64-419f-bd8d-1156ff56c64f",
  "dialog_settings": {},
  "next_snapshot_version": "1"
}